#!/bin/bash

:<<MARK
環境準備：
1，gcc 			4.8.5+
2，cmake 		2.8.12.2+
3，boost 		1.68.0（mysql5.7+需要依賴boost）
4，devtoolset 	7+
#----------
報錯提示：Please do not build in-source. Out-of source builds are highly recommended
解決方案：放棄內置編譯
1，於mysql源碼目錄下：mkdir -p build && cd build
2，將cmake . 替換至：cmake ..
#----------
https://downloads.mysql.com/archives/community/
MARK

PWD_PATH=$(pwd)
RESOURCE_PATH=$(cd resource && pwd)

function ResetVersion {
	yum list installed | grep Maria
	if [ $? -eq 0 ];then
		systemctl stop mariadb.service
		yum remove -y Maria*
		rm -rf /etc/my.cnf.rpmsave 2> /dev/null
		rm -rf /etc/yum.repos.d/mariadb.repo 2> /dev/null
	fi
	id mysql
	if [ $? -eq 0 ];then
		userdel -r mysql 2> /dev/null
		groupdel mysql 2> /dev/null
	fi
	useradd -s /bin/false -M mysql
}

function CommonInit {
	installStatus=true
	whileNum=1
	while $installStatus
	do
	    yum install -y prel cmake glibc-devel ncurses-devel zlib-devel libaio-devel openssl openssl-devel
	    if [ $? -eq 0 ];then
	        installStatus=false
	    else
	    	echo "網絡出錯 , 進行記憶安裝($whileNum)"
	    	let whileNum++
	    fi
	done
}

#gcc,start-----
#內存需2G以上
function GCCInit() {
	ls /usr/local/src/gcc-5.3.0
	if [ $? -ne 0 ];then
        cd $1 && tar -xvf gcc-5.3.0.tar.gz -C /usr/local/src/ && cd /usr/local/src/gcc-5.3.0
		./contrib/download_prerequisites
		#安裝依賴庫，start-----
		mkdir /usr/local/src/gcc-5.3.0-dependent && mv ./*.tar.* /usr/local/src/gcc-5.3.0-dependent && cd /usr/local/src/gcc-5.3.0-dependent
		for fileName in $(ls *.tar.*);do tar -xvf $fileName;done
		#注意依賴安裝的先後順序:gmp>mpfr>mpc
		cd gmp-4.3.2
		./configure
		make -j8 && make install
		cd ../mpfr-2.4.2
		./configure
		make -j8 && make install
		cd ../mpc-0.8.1
		./configure
		make -j8 && make install
		#安裝依賴庫，end-----
		cd /usr/local/src/gcc-5.3.0
		./configure \
		--prefix=/usr/local/gcc \
		--enable-bootstrap  \
		--enable-languages=c,c++ \
		--enable-checking=release \
		--disable-multilib
		make -j8 && make install
    fi
}

function DevtoolsetInit {
	yum -y install centos-release-scl-rh centos-release-scl
	yum -y install devtoolset-7-gcc devtoolset-7-gcc-c++
	source /opt/rh/devtoolset-7/enable
}

# function boostInit {
# 	boost,start-----
# 	yum -y install python-devel bzip2-devel zlib-devel
# 	cd $1 && tar -xvf boost_1_70_0.tar.gz -C /usr/local/src/ && cd /usr/local/src/boost_1_70_0
# 	./bootstrap.sh --prefix=/usr/local/boost
# 	./b2 install
# 	cd /usr/local/src/boost_1_70_0/tools/build
# 	./bootstrap.sh
# 	./b2 install --prefix=/usr/local/boost
# 	boost,end-----
# }

function SourceCodeCompilation() {
	cd $1 && tar -xvf mysql-boost-8.0.15.tar.gz -C /usr/local/src/
	mkdir /usr/local/src/mysql-8.0.15/debug && cd /usr/local/src/mysql-8.0.15/debug
	chown -R mysql:mysql /usr/local/src/mysql-8.0.15
	#cp $1/boost_1_68_0.tar.gz /usr/local/mysql/boost/
	#-----
	cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local/mysql8015 \
	-DWITH_SSL=system \
	-DDEFAULT_CHARSET=utf8mb4 \
	-DDEFAULT_COLLATION=utf8mb4_general_ci \
	-DENABLED_LOCAL_INFILE=ON \
	-DWITH_INNODB_MEMCACHED=ON \
	-DWITH_INNOBASE_STORAGE_ENGINE=1 \
	-DWITH_ARCHIVE_STORAGE_ENGINE=1 \
	-DWITH_FEDERATED_STORAGE_ENGINE=1 \
	-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \
	-DWITH_PERFSCHEMA_STORAGE_ENGINE=1 \
	-DWITHOUT_EXAMPLE_STORAGE_ENGINE=1 \
	-DSYSCONFDIR=/usr/local/mysql8015/  \
	-DWITH_BOOST=/usr/local/src/mysql-8.0.15/boost \
	-DMYSQL_UNIX_ADDR=/usr/local/mysql8015/3306/mysql.sock \
	-DENABLE_DOWNLOADS=1
	#-DCOMPILATION_COMMENT="chunio" \
	#-----
	make -j8 && make install
}

function DBConfiguration {
echo '[client]

port = 3306
socket = /usr/local/mysql8015/3306/mysql.sock

#--------------------------------------------------

[mysqld]

port = 3306
user = mysql
socket = /usr/local/mysql8015/3306/mysql.sock
pid-file = /usr/local/mysql8015/3306/mysql.pid
basedir = /usr/local/mysql8015
datadir = /usr/local/mysql8015/data
tmpdir = /usr/local/mysql8015/temp
server-id = 1
character-set-server = utf8mb4
default-storage-engine = InnoDB
init_connect = "SET NAMES utf8"

#--------------------

log_output = FILE
long_query_time = 1
log-error = /usr/local/mysql8015/log/error.log
general_log = 1
general_log_file = /usr/local/mysql8015/log/general.log
slow_query_log = 1
slow_query_log_file = /usr/local/mysql8015/log/slow.log

#binlog,start-----
log_bin = /usr/local/mysql8015/log/LogBin
binlog_format = mixed
max_binlog_size = 512m
binlog_cache_size = 32m
max_binlog_cache_size = 64m
#binlog,end-----

relay-log = /usr/local/mysql8015/log/RelayBin
relay-log-index = /usr/local/mysql8015/log/RelayBinIndex

#innodb,start-----
innodb_data_file_path = ibdata1:2048M:autoextend
# innodb_data_home_dir = /usr/local/mysql8015/data/innodb
# innodb_log_group_home_dir = /usr/local/mysql8015/log/innodb
innodb_log_file_size = 128M
innodb_log_buffer_size = 16M
innodb_log_files_in_group = 3
innodb_thread_concurrency = 8
innodb_flush_method = O_DIRECT
innodb_buffer_pool_size = 128M
innodb_max_dirty_pages_pct = 70
innodb_flush_log_at_trx_commit = 2
#innodb,end-----

# tars example,start-----
# #log_bin
# #basedir = /usr/local/mysql8015
# #datadir = /usr/local/mysql8015/data
# #socket = /usr/local/mysql8015/3306/mysql.sock
# #innodb_buffer_pool_size = 128M
# sort_buffer_size = 2M
# join_buffer_size = 128M
# read_rnd_buffer_size = 2M
# bind-address = 192.168.181.131
sql-mode = "NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES"
default-authentication-plugin = mysql_native_password
# tars example,end-----

#--------------------------------------------------

[mysql]

socket = /usr/local/mysql8015/3306/mysql.sock

#命令自動補全
auto-rehash
#no-auto-rehash
#自定義登錄摘要信息
prompt = (\u@\h) [\d]>\_
#default-character-set = gbk

#跳過密碼（首次）
#skip-grant-tables

#!includedir /etc/my.cnf.d' > /usr/local/mysql8015/mysql.conf
}

function ACL {
	mkdir -p /usr/local/mysql8015/{3306,data,temp,log/innodb}
	chown -R mysql:mysql /usr/local/mysql8015
	chmod -R 777 /usr/local/mysql8015
	chmod 644 /usr/local/mysql8015/mysql.conf
	# echo "PATH=\$PATH:/usr/local/mysql8015/bin" >> /etc/profile
	# echo "export PATH" >> /etc/profile
	# source /etc/profile
	#-----
	# mysqld_safe --user=mysql &
	# alter user 'root'@'localhost' identified by "0000";
}

function RegisterService {
	echo 'PATH=$PATH:/usr/local/mysql5725/bin:/usr/local/mysql5725/lib' >> /etc/profile
	echo 'export PATH MYSQL_HOME=/usr/local/mysql5725' >> /etc/profile
	source /etc/profile
	#--initialize：隨機密碼（初始值）
	#--initialize-insecure：空密碼（初始值）
	
	#如果加上{--defaults-file=/usr/local/mysql8015/mysql.conf}啟動失敗，說明配置衝突/不正確（如初始化時data下必須爲空）
	mysqld \
	--defaults-file=/usr/local/mysql8015/mysql.conf \
	--initialize-insecure \
	--user=mysql

	#/etc/init.d指向/etc/rc.d/init.d目錄
	cp -a /usr/local/mysql8015/support-files/mysql.server /etc/init.d/mysqld
	chmod +x /etc/rc.d/init.d/mysqld  
	chkconfig --add mysqld
	chkconfig --list
	#啟動出錯日誌：/usr/local/mysql8015/data/{hostNamr}.err
	service mysqld start
}

function EditPassword() {
	expect << EOF
	spawn mysql -uroot -p
	expect "Enter password*" { send "\r" }
	expect "*mysql*" { send "ALTER user 'root'@'localhost' IDENTIFIED BY "'{$1}'";\r" }
	expect "*mysql*" { send "USE mysql;\r" }
	expect "*mysql*" { send "CREATE USER 'root'@'%' IDENTIFIED BY '{$1}';\r" }
	expect "*mysql*" { send "ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '{$1}';\r" }
	expect "*mysql*" { send "GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION;\r" }
	expect "*mysql*" { send "FLUSH PRIVILEGES;\r" }
	expect "*mysql*" { send "\r" }
	expect "*mysql*" { send "EXIT;\r" }
	expect eof
	EOF
}

ResetVersion
CommonInit
#GCCInit $RESOURCE_PATH
DevtoolsetInit
SourceCodeCompilation $RESOURCE_PATH
DBConfiguration
ACL
RegisterService
EditPassword cfcd208495d565ef66e7dff9f98764da

#可選項：wolfssl替換已有openssl
# cd $PWD_PATH && unzip -od /usr/local/src wolfssl-4.0.0.zip && cd /usr/local/src/wolfssl-4.0.0/IDE/MYSQL
# . do.sh
# use -DWITH_SSL=wolfssl for CMake?

#https://downloads.mysql.com/archives/community/
#wget https://cdn.mysql.com/archives/mysql-8.0/mysql-boost-8.0.15.tar.gz
#libaio:一個異步非阻塞接口

echo "--------------------------------------------------"
echo "$0 , success"
echo "--------------------------------------------------"
exit 0